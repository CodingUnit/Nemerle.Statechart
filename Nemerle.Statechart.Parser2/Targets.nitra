namespace Nemerle.Statechart.Grammar
{
  syntax module Targets
  {
    using Nitra.Core;
    using PrettyPrint;
    using Outline;
    using TokenNames;
    using StandardSpanClasses;
    using Whitespaces;
    using Main;
    using PseudoStates;
    using Transitions;
    using Base;

    syntax SimpleTarget
    {
      | Self
      {
        regex Self = '@' | "self";
      }
      | PseudoTarget
      | Final
      {
        regex Final = "$0" | "final";
      }
      | QualifiedTarget
      {
        syntax QualifiedTarget
        {
          | QualifiedState  = "\"" FullyQualifiedAny "\""
          | Qualified       = FullyQualified
          | QualifiedPseudo = FullyQualified '.' PseudoTarget
        }

      }
    }

    syntax PseudoTarget
    {
      | ExitPoint = ExitPointDecl
      | History
      {
        syntax History
        {
          | History = "history"
          | Shallow
          {
            regex Shallow = "H" | "h";
          }
          | Deep
          {
            regex Deep = "H*" | "h*";
          }
        }
      }
      | Terminate = TerminateKey
    }


    syntax NormalTarget
    {
      | SimpleTarget
      | ForkTarget
      {
        syntax ForkTarget
        {
          | Normal = '('? FullyQualified ',' (FullyQualified; ',')+ ')'?;
          | Alternative = FullyQualified '(' (AnyIdentifier; ',')+ ')';
        }
      }
    }

    syntax JunctionTarget = JunctionBody;

    syntax TransitionTarget
    {
      | Normal = NormalTarget ';'
      | Junction = BracesTarget
      {
        syntax BracesTarget
        {
          | ChoiceTarget = '$' JunctionTarget
          | JunctionTarget
        }
      }
    }
  }
}
