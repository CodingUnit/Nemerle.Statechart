using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reactive.Linq;

namespace Nemerle.Statechart
{
  /// <summary>
  /// Description of Observable.
  /// </summary>
  public module Observable
  {
    public WhenChange[T](src : IObservable[T], pre_cond : T -> bool, changed : T * T -> bool) : IObservable[T]
    {
      ChangeObservable(src, pre_cond, changed)
    }

    public WhenChange[T](src : IObservable[T], changed : T * T -> bool) : IObservable[T]
    {
      ChangeObservable(src, null, changed)
    }

    public WhenChange[T](src : IObservable[T]) : IObservable[T]
    {
      ChangeObservable(src, null, null)
    }
    
    public WhenChange[T](src : IObservable[T], pre_cond : Func[T, bool], changed : Func[T, T, bool]) : IObservable[T]
    {
      ChangeObservable(src, pre_cond, changed)
    }

    public WhenChange[T](src : IObservable[T], changed : Func[T, T, bool]) : IObservable[T]
    {
      ChangeObservable(src, null, changed)
    }

  }
}
