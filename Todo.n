using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{

  /*TODO:
  - позиции парсера полные с началом и концом
  - ошибка когда region слово появляется в уже state_conc состоянии, которого регионы разделяется с помощью and
  - ошибки junction
  - оптимизировать junction
  - описание возможных флагов и варианты синтаксиса
  - merge
  - empty junctions
  - множественные guard_for
  - полное имя внутри экземпляра inlined sub machine
  - region in inline statemachine
  - сделать чтобы переопределять любые обработчики в том числе entry и exit
  - сигнализировать в парсере о неверных аттрибутах
  - точка входа и выхода
  - у fork могут быть guard на начальных переходах
  - synch state
  - Transition redefinition has been added to standart, in order to express if a transition of a general state machine can be redefined or not.
    state machines, states redefined marked with keyword extended
  - auto initial attribute for state
  - change event (when (exp is true))
  - call event
  - change events (like properties)
  - переход без события но запускающийся по гуарду
  - генерация в с++ код микроконтроллера
  - генерация таблицы переходов
  - импорт из нарисованной модели
  - экспорт в State Chart Xml
  - импорт в State Chart Xml
  - indentation синтаксис
  - оптимизация повторяющихся действий
  - there is no more reaction to events within the region if the final state is active
  - !!! state machine должна быть в своем контексте, поиск узлов как terminate, должна идти в своей машине, история должна относится к машине как к целому а не так же как и к другим комп. состояниям
  - не блокировать поток во время обработки синхронного события
  - fork must check to go to states through junctions or choices
  - сделать настраивание rule правил извне возможно с помощью graph transformation
  - Completion of the topmost regions of an object corresponds to its termination
  - a completion event is generated if either the submachine or the contained region
    has reached a final state and the state’s internal activities have been completed
  - к junction могут идти переходы без событий, а после объединения могут быть события
  - group transitions with internal transitions
  - group transitions and guards
  - group transitions and junctions
  - locations in errors and warnings
  - any event
  - statemachines import from external assembly
  - event inheritance
  - помощь по флагам и другим функциям в компиляторе
  - большие имена состояний с помощью ""
  - тесты на все ошибки
  - passive state machine
  - смотреть ситуацию когда возможен переход в историческое псевдосостояние, когда еще нет истории
  - вычисление переопределений переходов смотреть по одинаковым именам гуардов
  - смотреть переходы дупликаты идущие в одно и тоже состояние
  - history not cleared at final state but check each time if it is final last active then use default transition
  - fork to history pseudostate
  - join конфликты с обычными переходами
  - находить конфликты join переходов
  - send event action with parameters
  - проверить действия и гуарды с разными параметрами событий в параллельных переходах
  - тест на альясы
  - тесты на выражения в действиях (см.пред коммит)
  - проверка правильности времени для установки в таймер
  - переходы в final не должны быть из других подсостояний
  - fork and join in one transition
  - history cannot have transitions from inside this composite state because it is already active
  - send(fsm, a) посылка конкретному
  - extern fsm example2; использовать ссылку на этот автомат
  - using a1 fsm.event.a1; использовать это событие
  - join overall transition may have guard
  - junction crosses state actions execute after entry actions
  - internal transition разные guard но один action => ошибка, разные action - норма но разные имена
  - переходы с одинаковым началом и концом и событием, но с разными guard,
    если один action у всех то это ошибка, если разный то надо создавать для каждого свой метод
  - history clear, save and restore in concurrent states
  - обойти state explosion problem в параллельных состояниях через генерацию состояний без всех комбинаций, только внутри региона с раздельными полями состояний
  - сгруппированные переходы в паралл. состояниях, одно событие но гуарды разные
  - переменные в after () синтаксисе
  - ошибка когда два метода в классе с одним именем
  - тест на : region
  - использование Dispatcher для действий
  - entry and exit actions can obtain event parameters
  - state maybe anonymous
  - перенести todo в issues
  - тесты на длинные идентификаторы состояний StateId
  
  */

}
