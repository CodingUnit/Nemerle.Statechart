using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{

  /*TODO:  
  + shallow history
  + deep history
  + default history transitions  
  + guards
  + guards in fsm class,  properties,  functions
  + reset history by final (check spec)
  + приоритет переходов вложенных классов  
  + несколько типов историй в одном состоянии
  + final is not pseudostate
  + initial - псевдосостояние
  + terminate pseudostate
  + do activity  
  + Action вместо EventHandler 
  + thread pool tasks
  + warning при неиспользовании элементов (истории и тп)
  + partial машины, разделяющие описание по нескольким классам
  + приоритет действий вложенных классов
  - internal transition разные guard но один action => ошибка, разные action - норма но разные имена  
  - переходы с одинаковым началом и концом и событием, но с разными guard, 
    если один action у всех то это ошибка, если разный то надо создавать для каждого свой метод  
  + встраивание действий в выходные и входные обработчики
  + переход из начального сразу в history
  - что делать если другие состояния реагируют на события join, и надо следить есть ли такие если нет то не 
    надо генерить для них код
  + fork and join pseudostates
  + orthogonal regions
  + final в верхнем классе это terminate
  + вложенные состояние в подрегионах
  - history clear, save and restore in concurrent states
  + junction
  - ошибки junction
  - оптимизировать junction
  + junction отдельно объявленный
  - branch/choice
  + junction объединения
  - junction без guard
  - описание возможных флагов и варианты синтаксиса
  - merge
  + guard in state
  + сделать поддержку синтаксиса : parent
  - guard on completion transition
  - отделить StaticGenerator от Analyser
  - empty junctions
  - множественные guard_for
  - проверить region в sub_region
  - полное имя внутри экземпляра inlined sub machine
  - region in inline statemachine
  + нахождение неверного target перехода
  - если выход join из разных подрегионов и подрегион внутри другого региона
  - разный синтаксис для разных переходов во вне и внутри
  + ошибки парсинга строк времени
  - сделать чтобы переопределять любые обработчики в том числе entry и exit  
  - сигнализировать в парсере о неверных аттрибутах 
  - состояния с одинаковыми именами
  - точка входа и выхода
  - встраиваемые автоматы
  - у fork могут быть guard на начальных переходах
  - synch state
  - Transition redefinition has been added to standart, in order to express if a transition of a general state machine can be redefined or not.
  - local and external transitions
  - auto initial attribute for state
  - deffered events
  - events with parameters
  + sync and async events (eg queue)
  - time events (after 10s) // after (10 sec) // after (10 sec since exit from state A) // when (date.=Jan.1, 2000)
  - change event (when (exp is true))
  - call event
  - events hierarchy
  - change events (like properties)
  - Extern => Incomplete(Lab2 TermProject FinalTest); объединение полной квалификации имени для fork
  - else guard
  - переход без события но запускающийся по гуарду
  - генерация в с++ код микроконтроллера
  - генерация таблицы переходов
  - импорт из нарисованной модели
  - экспорт в State Chart Xml
  - импорт в State Chart Xml
  - indentation синтаксис
  - оптимизация повторяющихся действий
  - there is no more reaction to events within the region if the final state is active
  + сложные выражения в guards
  - history не нужно делать GetCopy для простых состояний не регионов
  - The history state may not have incoming transitions from other states within the composite state because it is already active
  - !!! state machine должна быть в своем контексте, поиск узлов как terminate, должна идти в своей машине, история должна относится к машине как к целому а не так же как и к другим комп. состояниям
  - не блокировать поток во время обработки синхронного события
  - fork must check to go to states through junctions or choices
  - встроенные actions без вызова метода, в выражениях
  - сделать настраивание rule правил извне возможно с помощью graph transformation
  - initial to history
  - все композитные состояния в которые осуществляется переход должны иметь initial pseudostate
  - Completion of the topmost regions of an object corresponds to its termination
  - a completion event is generated if either the submachine or the contained region
    has reached a final state and the state’s internal activities have been completed
  - к junction могут идти переходы без событий, а после объединения могут быть события
  - completion transitions with guards
  - Entry point entry: If a transition enters a composite state through an entry point pseudostate, then the entry behavior is
    executed before the action associated with the internal transition emanating from the entry point.
  - group transitions with internal transitions
  - group transitions and guards
  - group transitions and junctions
  - locations in errors and warnings
  - any event
  - statemachines import from external assembly
  - event sending between machines
  - event declaration and inheritance
  - помощь по флагам и другим функциям в компиляторе
  - большие имена состояний с помощью ""
  - тесты на все ошибки
  - passive state machine
  - смотреть ситуацию когда возможен переход в историческое псевдосостояние, когда еще нет истории
  - вычисление переопределений переходов смотреть по одинаковым именам гуардов
  - смотреть переходы дупликаты идущие в одно и тоже состояние
  - fsmtest распознавать переходы через несколько состояний (в случае defer)
  - AnyReceiveEvent trigger
  - history not cleared at final state but check each time if it is final last active then use default transition
  - fork to history pseudostate
  - join in concurrent transitions
  - join конфликты с обычными переходами
  - join by completion композитных параллельных состояний
  - находить конфликты join переходов
  - send event action with parameters
  - проверить действия и гуарды с разными параметрами событий в параллельных переходах
  - тест на альясы
  - тесты на выражения в действиях (см.пред коммит)
  - тест на сабмашины
  - тест на переходы в junction из входной точки
  - junction в junction переходы
  - проверка правильности времени для установки в таймер
  - переходы в final не должны быть из других подсостояний
  - fork and join in one transition
  - history cannot have transitions from inside this composite state because it is already active
  - send_other(a) посылка остальным
  - send_all(a) посылка всем, включая себя
  - send(a) посылке только себе
  - send(fsm, a) посылка конкретному
  - extern fsm example2; использовать ссылку на этот автомат
  - event_class comevent a1, a2, a3; использовать эти события
  - using a1 fsm.event.a1; использовать это событие
  - initial transition may have guards, this must modeled by completion transitions
  - join overall transition may have guard
  - junction crosses state actions execute after entry actions
  */

}
