using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using CommonLib.Macros;

namespace Nemerle.Statechart.Tests
{
  /// <summary>
  /// Description of AlarmClockInternals.
  /// </summary>
  partial class AlarmClock
  {
    mutable Now : DateTime;
    
    mutable alarm : DateTime;
    
    mutable setup_time : DateTime;
    
    mutable blink_flag : bool;
    
    mutable diff : TimeSpan;
    
    blink : bool
    {
      get
      {
        if (blink_flag)
        {
          blink_flag = false;
          true
        } else
        {
          blink_flag = true;
          false
        }
      }
    }
    
    EntryPowered() : void
    {
      Now = DateTime.Now;
      diff = TimeSpan.Zero;
    }

    set_am_pm() : void
    {
      set_am_pm(Now);
    }

    set_am_pm(time : DateTime) : void
    {
      if (time.Hour > 12) after_12_hours() else pass_12_hours()
    }
    
    Beep(tok : CancellationToken) : void
    {
      while (!tok.IsCancellationRequested)
      {
        Beep.Beep(100, 2000, 100);
        Thread.Sleep(70);
        Beep.Beep(100, 2000, 100);
        Thread.Sleep(500);
      }
    }
    
    TimeString(time : DateTime, blink : bool = false) : string
    {
      time.ToString(if (!blink) "hh:mm" else "hh mm")
    }
    
    CurTime : string
    {
      get
      {
        TimeString(Now, blink)
      }
    }
    
    AlarmTime : string
    {
      get
      {
        TimeString(alarm)
      }
    }
    
    SetupTime : string
    {
      get
      {
        TimeString(setup_time)
      }
    }
    
    OnShow(str : string) : void
    {
      Show?.Invoke(str)
    }

    public event Show : Action[string];    
  }
}
