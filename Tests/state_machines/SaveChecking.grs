# begin of graph "lgspGraph_9" saved by GrsExport

new graph "StateMachine" "lgspGraph_9"
new :StateMachine($ = "SaveChecking", id = 9, depth = 0, name = "SaveChecking")
new :State($ = "SaveAs", id = 3, depth = 0, name = "SaveAs", entry_act = array<string>["SaveDialog.FileName = CurFile"], exit_act = array<string>[], do_act = array<string>["ViewDialog(ViewSaveAsDialog)"], defer = array<string>[], set_flag = 0L, idx = 3, possible_conf_str = set<string>{}, initial_conf_str = set<string>{})
new :State($ = "SaveCurrentFile", id = 2, depth = 0, name = "SaveCurrentFile", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>["DoActionComplete(SaveCurrentFile)"], defer = array<string>[], set_flag = 0L, idx = 2, possible_conf_str = set<string>{}, initial_conf_str = set<string>{})
new :State($ = "Overwrite", id = 1, depth = 0, name = "Overwrite", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>["ViewDialog(ViewOverwrite)"], defer = array<string>[], set_flag = 0L, idx = 1, possible_conf_str = set<string>{}, initial_conf_str = set<string>{})
new :State($ = "WantToSave", id = 0, depth = 0, name = "WantToSave", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>["ViewDialog(ViewWantToSave)"], defer = array<string>[], set_flag = 0L, idx = 0, possible_conf_str = set<string>{}, initial_conf_str = set<string>{})
new :State($ = "", id = 8, depth = 0, name = "", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>[], defer = array<string>[], set_flag = 0L, idx = 0, possible_conf_str = set<string>{}, initial_conf_str = set<string>{})
new :InitialState($ = "$4", id = 4, depth = 0)
new :EntryPoint($ = "new", id = 7, depth = 0, name = "new")
new :EntryPoint($ = "save_as", id = 6, depth = 0, name = "save_as")
new :EntryPoint($ = "save", id = 5, depth = 0, name = "save")
new :Junction($ = "UnnamedJunction", id = 10, depth = 0, name = "UnnamedJunction")
new :Unresolved($ = "WantToSave2", id = 0, depth = 0, name = "WantToSave")
new :Unresolved($ = "SaveAs3", id = 0, depth = 0, name = "SaveAs")
new :Unresolved($ = "Overwrite2", id = 0, depth = 0, name = "Overwrite")
new :Unresolved($ = "WantToSave1", id = 0, depth = 0, name = "WantToSave")
new :Unresolved($ = "SaveCurrentFile2", id = 0, depth = 0, name = "SaveCurrentFile")
new :Unresolved($ = "SaveAs2", id = 0, depth = 0, name = "SaveAs")
new :Unresolved($ = "SaveCurrentFile1", id = 0, depth = 0, name = "SaveCurrentFile")
new :Unresolved($ = "Overwrite1", id = 0, depth = 0, name = "Overwrite")
new :Unresolved($ = "SaveAs1", id = 0, depth = 0, name = "SaveAs")
new :UnresolvedFinalState($ = "$17", id = 0, depth = 0)
new :UnresolvedFinalState($ = "$10", id = 0, depth = 0)
new :UnresolvedExitPoint($ = "cancel", id = 0, depth = 0, name = "cancel")
# total number of nodes: 23

new @("SaveChecking") - :Contains($ = "$1C") -> @("cancel")
new @("SaveChecking") - :TopState($ = "$9") -> @("")
new @("SaveAs") - :ExternalTransition($ = "$1B", id = 0, set_flag = 0L, trigger = "OK", guard = "", action = "CurFile = SaveDialog.FileName", out_str = "OK / CurFile = SaveDialog.FileName") -> @("SaveCurrentFile2")
new @("SaveCurrentFile") - :ExternalTransition($ = "$19", id = 0, set_flag = 0L, trigger = "OK", guard = "", action = "", out_str = "OK") -> @("$17")
new @("Overwrite") - :ExternalTransition($ = "$16", id = 0, set_flag = 0L, trigger = "No", guard = "", action = "", out_str = "No") -> @("SaveAs2")
new @("Overwrite") - :ExternalTransition($ = "$14", id = 0, set_flag = 0L, trigger = "Yes", guard = "", action = "", out_str = "Yes") -> @("SaveCurrentFile1")
new @("WantToSave") - :ExternalTransition($ = "$12", id = 0, set_flag = 0L, trigger = "No", guard = "", action = "", out_str = "No") -> @("$10")
new @("WantToSave") - :ExternalTransition($ = "$F", id = 0, set_flag = 0L, trigger = "Yes", guard = "", action = "", out_str = "Yes") -> @("UnnamedJunction")
new @("") - :Substate($ = "$1") -> @("Overwrite")
new @("") - :Substate($ = "$2") -> @("SaveCurrentFile")
new @("") - :Substate($ = "$3") -> @("SaveAs")
new @("") - :Contains($ = "$5") -> @("$4")
new @("") - :Contains($ = "$6") -> @("save")
new @("") - :Contains($ = "$7") -> @("save_as")
new @("") - :Contains($ = "$8") -> @("new")
new @("") - :Contains($ = "$A") -> @("UnnamedJunction")
new @("") - :Contains($ = "$B") -> @("SaveAs1")
new @("") - :Contains($ = "$D") -> @("Overwrite1")
new @("") - :Contains($ = "$11") -> @("$10")
new @("") - :Contains($ = "$13") -> @("SaveCurrentFile1")
new @("") - :Contains($ = "$15") -> @("SaveAs2")
new @("") - :Contains($ = "$18") -> @("$17")
new @("") - :Contains($ = "$1A") -> @("SaveCurrentFile2")
new @("") - :ExternalTransition($ = "$1D", id = 0, set_flag = 0L, trigger = "cancel", guard = "", action = "", out_str = "cancel") -> @("cancel")
new @("") - :Contains($ = "$1E") -> @("WantToSave1")
new @("") - :Contains($ = "$20") -> @("Overwrite2")
new @("") - :Contains($ = "$22") -> @("SaveAs3")
new @("") - :Contains($ = "$24") -> @("WantToSave2")
new @("") - :Substate($ = "$0") -> @("WantToSave")
new @("$4") - :PseudoTransition($ = "$1F", id = 0, set_flag = 0L, guard = "", action = "IsNew = false", out_str = " / IsNew = false") -> @("WantToSave1")
new @("new") - :PseudoTransition($ = "$25", id = 0, set_flag = 0L, guard = "", action = "IsNew = true", out_str = " / IsNew = true") -> @("WantToSave2")
new @("save_as") - :PseudoTransition($ = "$23", id = 0, set_flag = 0L, guard = "", action = "", out_str = "") -> @("SaveAs3")
new @("save") - :PseudoTransition($ = "$21", id = 0, set_flag = 0L, guard = "", action = "", out_str = "") -> @("Overwrite2")
new @("UnnamedJunction") - :PseudoTransition($ = "$E", id = 0, set_flag = 0L, guard = "[else]", action = "", out_str = " [else]") -> @("Overwrite1")
new @("UnnamedJunction") - :PseudoTransition($ = "$C", id = 0, set_flag = 0L, guard = "[IsNew]", action = "", out_str = " [IsNew]") -> @("SaveAs1")
# total number of edges: 35

@("SaveAs").sub_regions = set<SubRegion>{}
@("SaveAs").regions = set<ConcurrentState>{}
@("SaveAs").sub_states = set<State>{}
@("SaveAs").possible_conf = set<ActiveState>{}
@("SaveAs").initial_conf = set<ActiveState>{}
@("$1B").lca = set<State>{}
@("$1B").sub_regions = set<SubRegion>{}
@("$1B").regions = set<ConcurrentState>{}
@("SaveCurrentFile").sub_regions = set<SubRegion>{}
@("SaveCurrentFile").regions = set<ConcurrentState>{}
@("SaveCurrentFile").sub_states = set<State>{}
@("SaveCurrentFile").possible_conf = set<ActiveState>{}
@("SaveCurrentFile").initial_conf = set<ActiveState>{}
@("$19").lca = set<State>{}
@("$19").sub_regions = set<SubRegion>{}
@("$19").regions = set<ConcurrentState>{}
@("Overwrite").sub_regions = set<SubRegion>{}
@("Overwrite").regions = set<ConcurrentState>{}
@("Overwrite").sub_states = set<State>{}
@("Overwrite").possible_conf = set<ActiveState>{}
@("Overwrite").initial_conf = set<ActiveState>{}
@("$16").lca = set<State>{}
@("$16").sub_regions = set<SubRegion>{}
@("$16").regions = set<ConcurrentState>{}
@("$14").lca = set<State>{}
@("$14").sub_regions = set<SubRegion>{}
@("$14").regions = set<ConcurrentState>{}
@("WantToSave").sub_regions = set<SubRegion>{}
@("WantToSave").regions = set<ConcurrentState>{}
@("WantToSave").sub_states = set<State>{}
@("WantToSave").possible_conf = set<ActiveState>{}
@("WantToSave").initial_conf = set<ActiveState>{}
@("$12").lca = set<State>{}
@("$12").sub_regions = set<SubRegion>{}
@("$12").regions = set<ConcurrentState>{}
@("$F").lca = set<State>{}
@("$F").sub_regions = set<SubRegion>{}
@("$F").regions = set<ConcurrentState>{}
@("").sub_regions = set<SubRegion>{}
@("").regions = set<ConcurrentState>{}
@("").sub_states = set<State>{}
@("").possible_conf = set<ActiveState>{}
@("").initial_conf = set<ActiveState>{}
@("$1D").lca = set<State>{}
@("$1D").sub_regions = set<SubRegion>{}
@("$1D").regions = set<ConcurrentState>{}
@("$1F").lca = set<State>{}
@("$1F").sub_regions = set<SubRegion>{}
@("$1F").regions = set<ConcurrentState>{}
@("$25").lca = set<State>{}
@("$25").sub_regions = set<SubRegion>{}
@("$25").regions = set<ConcurrentState>{}
@("$23").lca = set<State>{}
@("$23").sub_regions = set<SubRegion>{}
@("$23").regions = set<ConcurrentState>{}
@("$21").lca = set<State>{}
@("$21").sub_regions = set<SubRegion>{}
@("$21").regions = set<ConcurrentState>{}
@("$E").lca = set<State>{}
@("$E").sub_regions = set<SubRegion>{}
@("$E").regions = set<ConcurrentState>{}
@("$C").lca = set<State>{}
@("$C").sub_regions = set<SubRegion>{}
@("$C").regions = set<ConcurrentState>{}
# end of graph "lgspGraph_9" saved by GrsExport

