using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Console;
using Nemerle.Statechart;
using System.Threading;
  /// <summary>
  /// Description of Hypothetical.
  /// </summary>
  [statechart(<#
  
  flags testing;
  
  name "coffee grinding with deferable events";
  
  state MachineIdle
  {
    turn_on => Preparing;
  }
  
  state Preparing
  {
    machine_ready / defer;
    do / grind_coffee;
    _ => Waiting;
  }
  
  state Waiting
  {
    machine_ready => Brewing;
  }
  
  state Brewing
  {
    do / brew_coffee;
  }
  
  #>)]
  public class example
  {
    brew_coffee(_ : CancellationToken) : void
    {
    }
    
    grind_coffee(_ : CancellationToken) : void
    {
    }
  }

  module Test
  {
    Main() : void
    {
      
    }
  }
/*
BEGIN-OUTPUT
EntryA
EntryB
EntryC
[C]
Ok
Processing a 'a' 
ExitC
ExitB
EntryB
EntryC
[C]
Ok
Processing a 'b' 
ExitC
ExitB
EntryB
EntryD
[D]
Ok
Processing a 'a' 
ExitD
EntryC
[C]
Ok
Processing a 'b' 
ExitC
ExitB
EntryB
EntryD
[D]
Ok
END-OUTPUT
*/
