using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  /// <summary>
  /// Description of PathCover.
  /// </summary>
  [statechart(<#

  flags testing;

  state A
  {
    a      => B;
    a [a1] => C;
  }

  state B
  {
  }

  state C
  {
  }
  #>
  )]
  public class TestFsm
  {
    public a1 : bool {get;set;default true}
  }


module Test
{
  Main() : void
  {
    def fsm = TestFsm();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();

      // "Starting state machine"
    tester.Initiate(["A"]);
     // testing transition overriden guard
    tester.Test("a", "B", "ExitA");
    fsm.Terminate()
  }
}

/*
BEGIN-OUTPUT
EntryA
Ok
Processing a 'a'
ExitA
EntryB
Ok
END-OUTPUT
*/
