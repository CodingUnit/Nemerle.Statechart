using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{
  /// <summary>
  /// Description of junction_example.
  /// </summary>
  [statechart(
  <#
  flags testing debug;
  
  junction junc
  {
    a < 0  => state2;
    a == 5 => state3;
    a > 7  => state4;
  }
  
  e1 => state1;
  e2 => state0;
  
  state state0
  {
    e2 [b < 0] => junc;
  }
  
  state state1
  {
    e1 [b < 0] => junc;
  }
  
  state state2
  {
  }
  
  state state3
  {
  }
  
  state state4
  {
  }
  
  #>)]
  class junction_example
  {
    public a : int {get;set;default 0}
    public b : int {get;set;default 0}
  }
}



module Test
{
  Main() : void
  {
    def fsm = junction_example();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();

      // "Starting state machine"
    tester.Initiate(["A"]);
     // testing transition overriden guard
    tester.Test("a", "B", "ExitA");
    fsm.Terminate()
  }
}

/*
BEGIN-OUTPUT
EntryA
Ok
Processing a 'a'
ExitA
EntryB
Ok
END-OUTPUT
*/
