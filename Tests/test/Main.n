using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Reactive.Linq;

  /// <summary>
  /// Description of junction_example.
  /// </summary>
  [statechart(
  <#
  flags testing, auto_initial;

  // flags debug;

  name "do activity and completion transitions";

   state A
   {
     a => B;
   }

   state B
   {
     $> / centry;
     _ / completion_action => A;
   }

  #>)]
  public class example
  {
  }



module Test
{
  Main() : void
  {
    def fsm = example();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();
    tester.Initiate("A", "EntryA");
    tester.Test("a", "A", "ExitA", "centry", "EntryB", "ExitB", "completion_action", "EntryA");
    fsm.Terminate();
  }
}

/*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
ExitA
centry
EntryB
ExitB
completion_action
EntryA
[A]
Ok
END-OUTPUT
*/
