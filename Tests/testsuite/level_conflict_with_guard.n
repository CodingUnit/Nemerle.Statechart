using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  /// <summary>
  /// Description of TestFsm
  /// </summary>
  [statechart(<#

  flags testing;

  a => B;

  state A
  {

    a [a1] => C;
  }

  state B
  {
  }

  state C
  {
    b => A;
  }
  #>
  )]
  public class TestFsm
  {
    public a1 : bool {get;set;default true}
  }


module Test
{
  Main() : void
  {
    def fsm = TestFsm();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();

      // "Starting state machine"
    tester.Initiate(["A"]);

    tester.Test("a", "C", "ExitA");
    tester.Test("b", "A", "ExitC");
    fsm.a1 = false;
    tester.Test("a", "B", ["A", "Top"], ["Top"]);
    fsm.Terminate()
  }
}

/*
BEGIN-OUTPUT
EntryA
Ok
Processing a 'a'
ExitA
EntryC
Ok
Processing a 'b'
ExitC
EntryA
Ok
Processing a 'a'
ExitA
ExitTop
EntryTop
EntryB
Ok
END-OUTPUT
*/
