using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{
  /// <summary>
  /// Description of References.
  /// </summary>
  [Record]
  public class ReferenceNode[T] where T : class
  {
    [NeedChange(Id)]
    [NeedChange]
    public RefValue : T;
    [NeedChange]
    public Id       : int;
    
    public analyser : FsmAnalyser;
    
    public statemap : StateMap
    {
        get
        {
            analyser.statemap
        }
    }
    
    [NeedChange]
    public Getter : int -> T;
    [NeedChange]
    public Setter : int * (T -> T) -> void;
    
    public Fix(id : int) : ReferenceNode[T]
    {
      ChangeRefValueId(null, id)
    }
    
    public IsFixed : bool
    {
      get
      {
        RefValue == null && Id != -1
      }
    }
    
    public SetValue(valfunc : T -> T) : void
    {
        Setter(Id, valfunc)
    }
    
    public Value : T
    {
      get
      {
        if (RefValue != null) RefValue else Getter(Id);
      }
    }
    
    public override ToString() : string
    {
        Value.ToString()
    }
  }
  
  
 
  
}
