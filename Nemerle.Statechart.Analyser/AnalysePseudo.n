using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{
  using ListUtils;
  using DecisionNode;
  /// <summary>
  /// Description of AnalysePseudo.
  /// </summary>
  public partial class FsmAnalyser
  {
    [NeedChange] unnamed_junction_num : int;
    [NeedChange] unnamed_choice_num : int;
    
    CheckJunctionChoice(node : PseudoStateNode, an : FsmAnalyser) : PseudoStateNode * FsmAnalyser
    {
      match (node)
      {
      | PseudoStateNode.Choice as node => 
          def (n, a) = DecisionNode.Create(node, this);
          (node.ChangeDecisionTree(n), a)
      | Junction as node => 
          def (n, a) = DecisionNode.Create(node, this);
          (node.ChangeDecisionTree(n), a)
      | _ => (node, an)
    }
    }

  }
}
