using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{
  /// <summary>
  /// Description of FsmStateDecls.
  /// </summary>
  public partial variant FsmState
  {

    [NeedChange] public do_activity : list[StateAction.Do] = [];

    
    //[NeedChange] public pseudo_states : list[PseudoStateNode] = [];
    
    public statemap : StateMap
    {
      get
      {
        analyser.statemap
      }
    }
    
    [NeedChange] public cloneFor : FsmState;

    public state : StateNode.State;

    [NeedChange]
    public calc_hierarchy_pos : int = -1;
    
    [NeedChange]
    public initial : list[StateTransition] = [];
    [NeedChange] public entry : list[StateAction.Entry] = [];
    [NeedChange] public exit  : list[StateAction.Exit]  = [];
    [NeedChange]
    public internal_tran : list[StateTransition] = [];
    
    [NeedChange(internal_tran, initial)]
    [NeedChange]
    [NeedChange(initial)]
    public transitions : list[StateTransition] = [];

    //[TraverseIgnore]
    //[NeedChange]
    //public super_state : FsmState;
    
    //[TraverseIgnore]
    //[NeedChange]
    //public super_states : list[FsmState];
    
    //public Super : FsmState
    //{
    //  get
    //  {
    //    statemap.Super(this)
    //    //super_state?.Updated
    //  }
    //}

    [NeedChange] public copy_num : int;
    
    [NeedChange] public paths : TransitionPaths;
    [NeedChange] public lived : bool;

    //[NeedChange(transitions, internal_tran, initial, history, pseudo_states, copy_num, cloneFor)]
    //[NeedChange(copy_num)]
    //[NeedChange]
    //[Accessor]
    //public num : int = -1;

    public static TopStateName : string = "[Top]";

    //public reference : bool;
    [NeedChange(num, transitions, copy_num)]
    [NeedChange] public name : string;

    //public is_new : bool;
    [NeedChange] public analyser : FsmAnalyser;

    [NeedChange] public Id : IdType;

    [NeedChange(transitions, internal_tran, initial)]
    [NeedChange]
    public clones : list[FsmState] = [];
  }
}
