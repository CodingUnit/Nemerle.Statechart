using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{
  /// <summary>
  /// Description of FsmStateDecls.
  /// </summary>
  public partial variant FsmState
  {

    [NeedChange] public do_activity : IEnumerable[StateAction.Do];

    [TraverseInclude]
    [NeedChange(analyser)] [NeedChange] public sub_states : IEnumerable[FsmState] = Enumerable.Empty();
    //{
    //  get
    //  {
    //    sub_states_num |> statemap[_]
    //  }
    //}

    //public sub_states_num : list[int] = [];
    [NeedChange] public history : TwoOption[StateHistory] = TwoOption.None();
    [NeedChange(sub_states, super_state, analyser, history)]
    [NeedChange(super_state, analyser)]
    [NeedChange] public pseudo_states : IEnumerable[PseudoStateNode] = Enumerable.Empty();
    [NeedChange] public statemap : StateMap;
    [NeedChange] public cloneFor : FsmState;

    public state : StateNode.State;

    [NeedChange]
    public Initial : IEnumerable[StateTransition] = [];
    [NeedChange] public entry : IEnumerable[StateAction.Entry] = Enumerable.Empty();
    [NeedChange] public exit  : IEnumerable[StateAction.Exit] = Enumerable.Empty();
    [NeedChange(transitions, Initial)]
    public internal_tran : IEnumerable[StateTransition] = Enumerable.Empty();
    [NeedChange(internal_tran, Initial, history, entry, exit)]
    public transitions : IEnumerable[StateTransition] = Enumerable.Empty();

    //[NeedChange]
    //public super_state_num : int;

    [NeedChange] public super_state  : FsmState;
    //{
    //  get
    //  {
    //    statemap[super_state_num]
    //  }
    //}

    [NeedChange] public copy_num : int;
    [NeedChange] public paths : TransitionPaths;
    [NeedChange] public Lived : bool;

    [NeedChange]
    public Num : int;

    public static TopStateName : string = "[Top]";

    public reference : bool;
    [NeedChange] public name : string;

    //public is_new : bool;
    [NeedChange] public analyser : FsmAnalyser;

    [NeedChange(sub_states)] [NeedChange] public Id : IdType;

  }
}
