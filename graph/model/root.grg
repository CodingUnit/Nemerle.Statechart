// graph rewrite rule file, shows how to define a model to use, and how a rule looks like,
// with the pattern to match and the rewrite to apply, with lhs and rhs elements being indentified by their name

#using "StateMachine.gm"

// main rule: if there is an epsilon transition between state x and state y and a transition between state y and state z
// then add the transition between state y and state z directly in between state x and state z
// this is the major step of freeing an nfa from epsilon transitions
// note: the rule is not complete yet, and further steps/rules are needed to achieve the goal
test root 
{
	x:State -:Transition-> y:State;	
	
}
