// this is the version presented in the quick introduction to the user manual

node class StateBase 
{
    id   : int;	
}

node class State extends StateBase
{
    name   : string;
	entry  : array<string>;
	exit   : array<string>;
	do_act : array<string>;
}

node edge unique;
index unique;

node class SubMachineState extends State;
node class ConcurrentState extends State;
node class FinalState 	   extends StateBase;

node class PseudoState 
{
	id   : int;	
}

node edge unique;
index unique;

node class InitialState        extends PseudoState;
node class History    		   extends PseudoState;
node class DeepHistoryState    extends History;
node class ShallowHistoryState extends History;
node class EntryPoint 		   extends PseudoState;
node class ExitPoint           extends PseudoState;
node class Terminate           extends PseudoState;
node class Join                extends PseudoState;
node class Junction            extends PseudoState;
node class Choice              extends PseudoState;
node class Merge               extends PseudoState;
node class Fork                extends PseudoState;

directed edge class Transition 
{
    trigger : string;
	guard   : string;
	action  : array<string>;
}

directed edge class Substate extends Contains// connect StateBase[?] --> StateBase[*]
{    
}

directed edge class Contains// connect StateBase[?] --> StateBase[*]
{    
}

directed edge class Region extends Substate
{    
}

