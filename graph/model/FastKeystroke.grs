# begin of graph "lgspGraph_5" saved by GrsExport

new graph "StateMachine" "lgspGraph_5"
new :StateMachine($ = "FastKeystroke", id = 4, depth = 0, name = "FastKeystroke")
new :State($ = "Holded", id = 2, depth = 0, name = "Holded", entry_act = array<string>["holded()"], exit_act = array<string>[], do_act = array<string>["doing_while_hold()"], defer = array<string>[], set_flag = 0L, idx = 2, initial_conf_str = set<string>{}, possible_conf_str = set<string>{})
new :State($ = "Check", id = 1, depth = 0, name = "Check", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>[], defer = array<string>[], set_flag = 0L, idx = 1, initial_conf_str = set<string>{}, possible_conf_str = set<string>{})
new :State($ = "NotPressed", id = 0, depth = 0, name = "NotPressed", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>[], defer = array<string>[], set_flag = 0L, idx = 0, initial_conf_str = set<string>{}, possible_conf_str = set<string>{})
new :State($ = "", id = 3, depth = 0, name = "", entry_act = array<string>[], exit_act = array<string>[], do_act = array<string>[], defer = array<string>[], set_flag = 0L, idx = 0, initial_conf_str = set<string>{}, possible_conf_str = set<string>{})
new :Unresolved($ = "NotPressed2", id = 0, depth = 0, name = "NotPressed")
new :Unresolved($ = "NotPressed1", id = 0, depth = 0, name = "NotPressed")
new :Unresolved($ = "Holded1", id = 0, depth = 0, name = "Holded")
new :Unresolved($ = "Check1", id = 0, depth = 0, name = "Check")
# total number of nodes: 9

new @("FastKeystroke") - :TopState($ = "$3") -> @("")
new @("Holded") - :ExternalTransition($ = "$B", id = 0, set_flag = 0L, trigger = "release", guard = "", action = "released()", out_str = "release / released()") -> @("NotPressed2")
new @("Check") - :ExternalTransition($ = "$9", id = 0, set_flag = 0L, trigger = "release", guard = "", action = "", out_str = "release") -> @("NotPressed1")
new @("Check") - :ExternalTransition($ = "$7", id = 0, set_flag = 0L, trigger = "after(00:00:01)", guard = "", action = "", out_str = "after(00:00:01)") -> @("Holded1")
new @("NotPressed") - :ExternalTransition($ = "$5", id = 0, set_flag = 0L, trigger = "push", guard = "", action = "", out_str = "push") -> @("Check1")
new @("") - :Substate($ = "$1") -> @("Check")
new @("") - :Substate($ = "$2") -> @("Holded")
new @("") - :Contains($ = "$4") -> @("Check1")
new @("") - :Contains($ = "$6") -> @("Holded1")
new @("") - :Contains($ = "$8") -> @("NotPressed1")
new @("") - :Contains($ = "$A") -> @("NotPressed2")
new @("") - :Substate($ = "$0") -> @("NotPressed")
# total number of edges: 12

@("Holded").sub_regions = set<SubRegion>{}
@("Holded").regions = set<ConcurrentState>{}
@("Holded").sub_states = set<State>{}
@("Holded").possible_conf = set<ActiveState>{}
@("Holded").initial_conf = set<ActiveState>{}
@("$B").lca = set<State>{}
@("$B").sub_regions = set<SubRegion>{}
@("$B").regions = set<ConcurrentState>{}
@("Check").sub_regions = set<SubRegion>{}
@("Check").regions = set<ConcurrentState>{}
@("Check").sub_states = set<State>{}
@("Check").possible_conf = set<ActiveState>{}
@("Check").initial_conf = set<ActiveState>{}
@("$9").lca = set<State>{}
@("$9").sub_regions = set<SubRegion>{}
@("$9").regions = set<ConcurrentState>{}
@("$7").lca = set<State>{}
@("$7").sub_regions = set<SubRegion>{}
@("$7").regions = set<ConcurrentState>{}
@("NotPressed").sub_regions = set<SubRegion>{}
@("NotPressed").regions = set<ConcurrentState>{}
@("NotPressed").sub_states = set<State>{}
@("NotPressed").possible_conf = set<ActiveState>{}
@("NotPressed").initial_conf = set<ActiveState>{}
@("$5").lca = set<State>{}
@("$5").sub_regions = set<SubRegion>{}
@("$5").regions = set<ConcurrentState>{}
@("").sub_regions = set<SubRegion>{}
@("").regions = set<ConcurrentState>{}
@("").sub_states = set<State>{}
@("").possible_conf = set<ActiveState>{}
@("").initial_conf = set<ActiveState>{}
# end of graph "lgspGraph_5" saved by GrsExport

